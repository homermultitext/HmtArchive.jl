---
engine: julia
---

# Assessing consistency of documentation

`HmtArchive.Analysis` includes several functions for evaluating the referential integrity of the data in a published release of the HMT project.

We'll illustrate theses functions on a specified release, "hmt-2024c" (the last published release in calendar year 2024).

```{julia}
using HmtArchive, HmtArchive.Analysis
release = hmt_cex("hmt-2024c")
```

## Collect data from the current release

Data we'll need from the current release:

- DSE triples (text/page/image)
- text edition
- links between *scholia* and *Iliad* text

```{julia}
#| warning: false
#| output: false
dse = hmt_dse(release)[1]
dipltext = hmt_diplomatic(release)
commentary = hmt_commentary(release)[1]

```

## Assessing an entire release

Use the `missing_from_edition` function to collect a list of text passages  cited in DSE records that do not appear in this release's text corpus:

```{julia}
#| warning: false
#| asis: true
notincorpus = HmtArchive.Analysis.missing_from_edition(dipltext, dse)
missingcount = length(notincorpus)
totalpsgs = length(dipltext.passages)

using Markdown
"> **$(missingcount)** citable passages out of $(totalpsgs) total passages have no record in this release's DSE collection" |> Markdown.parse
```

Use the `missing_from_dse` function to collect a list of text passages in this release's text corpus that do not appear in a DSE record:

```{julia}
#| warning: false
#| asis: true
notindse = HmtArchive.Analysis.missing_from_dse(dipltext, dse)
```

## Assessing errors by book of the *Iliad*

## Assessing a single page


```{julia}
#| output: false
using CitableObject
chosenpg = Cite2Urn("urn:cite2:hmt:msA.v1:37v")
```

Find texts for the chosen page:

```{julia}
#| warning: false
#| output: false
using CitablePhysicalText, CitableText
txts = textsforsurface(chosenpg, dse)
iliadlines = filter(u -> startswith(workcomponent(u), "tlg0012.tlg001"), txts)
```